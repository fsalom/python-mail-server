name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t myapp:latest .

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key and set permissions
      run: |
        echo "${{ secrets.DROPLET_SSH_KEY }}" | tr -d '\r' > key.pem
        chmod 600 key.pem

    - name: Verify if chmod is available in /usr/bin and /bin
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "
        ls /usr/bin/chmod && ls /bin/chmod || echo 'chmod not found'"

    - name: Ensure coreutils is installed (for chmod)
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "
        apt-get update && \
        apt-get install -y coreutils"

    - name: Install Docker Compose on the server
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "
        curl -L https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose && \
        chmod +x /usr/local/bin/docker-compose && \
        ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose"

    - name: Ensure bunzip2 is installed on the server
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "
        apt-get update && \
        apt-get install -y bzip2"

    - name: Verify docker-compose installation
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "docker-compose --version"

    - name: Create project directory on server if not exists
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "mkdir -p /root/mailserver"

    - name: Copy Docker Compose file to server
      run: scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yml root@"${{ secrets.DROPLET_IP }}:/root/mailserver"

    - name: Save Docker image and load on server
      run: |
        docker save myapp:latest | bzip2 | ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" 'bunzip2 | docker load'

    - name: List files in mailserver directory for debugging
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "ls -la /root/mailserver"

    - name: Deploy application
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "
        cd /root/mailserver && \
        docker-compose down && \
        docker-compose up -d"

    - name: Clean up SSH key
      run: rm -f key.pem
