name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t myapp:latest .

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Start ssh-agent
      id: start-ssh-agent
      run: |
        eval $(ssh-agent -s)
        echo "SSH agent started"

    - name: Add SSH key
      run: |
        echo "${{ secrets.DROPLET_SSH_KEY }}" | tr -d '\r' > key.pem
        chmod 600 key.pem
        ssh-add key.pem
        echo "SSH key added"
      env:
        SSH_PASSPHRASE: ""

    - name: Create project directory on server if not exists
      run: ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}" "mkdir -p /root/mailserver"

    - name: Copy Docker Compose file to server
      run: scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yml "${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}:/root/mailserver"

    - name: Save Docker image and load on server
      run: |
        docker save myapp:latest | bzip2 | ssh -o StrictHostKeyChecking=no -i key.pem "${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_IP }}" 'bunzip2 | docker load'

    - name: Deploy application
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd /root/mailserver
          docker-compose down
          docker-compose up -d

    - name: Clean up SSH key
      run: rm -f key.pem
